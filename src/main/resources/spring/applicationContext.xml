<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
       ">

    <!---->
    <context:annotation-config/>
    <!-- 配置扫描的包 -->
    <context:component-scan base-package="com.jianq"
                            use-default-filters="false">
        <!-- controller 由spring mvc扫描 -->
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--整合hibernate-->
    <!--可以写在配置文件中 用${}方式获取值-->
    <context:property-placeholder location="classpath:db.properties"/>
    <!--1.配置数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <!--<property name="initialPoolSize" value="5"/>-->
        <!--<property name="maxPoolSize" value="20"/>-->
    </bean>

    <!--2.配置sessionFactory-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!--配置数据源-->
        <property name="dataSource" ref="dataSource"></property>
        <!--配置hibernate 配置文件的路径和名称-->
        <property name="configLocation" value="classpath:hibernate/hibernate.cfg.xml"></property>
        <!--配置 hibernate 的映射文件-->
        <property name="mappingLocations" value="classpath:hibernate/po/*.hbm.xml"></property>

        <!--基于注解的方式，在上面<context:component-scan base-package="com.example"/>中已配置扫描注解，因此步可以忽略-->
        <!--<property name="packagesToScan">-->
        <!--<list>-->
        <!--<value>com.example.po.*</value>-->
        <!--</list>-->
        <!--</property>-->
    </bean>

    <!--3.配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory">
        </property>
    </bean>

    <!--4.通知配置事务属性-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!--事务的传播属性-->
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="del*" propagation="REQUIRED"/>
            <tx:method name="modify*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="count*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="list*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="*" read-only="false"/>
        </tx:attributes>
    </tx:advice>

    <!--5. 配置切面-->
    <aop:config>
        <aop:pointcut id="hbmpointcut" expression="execution(* com.jianq.service.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="hbmpointcut"/>
    </aop:config>
</beans>